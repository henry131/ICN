# Topology Structure and General Parameters
**.name="${name=tree}"
**.levels="${levels=5}"
**.branch="${branch=3}"
**.u = ${un = 00,10}
seed-set = ${rep = 1}
network = networks.${name}_${levels}_${branch}_u${un}_r${rep}_network

############################# Output ##########################################

# Turn off vector output
**.vector-recording = false
# Statistics Output
output-scalar-file = l${levels}/${sl}-${scenario=Edge}/u${un}/ccn-id${rep}.sca

########################## Run time Inputs ####################################

##Arriva rate of each timer
**.lambda = 20
##Timer indicating that a given content is not downloaded (>> N_D*d, where N_D is the network diameter, and d is the average delay on a link)
**.RTT = 2
##Timer indicating how often checking for a given content download
**.check_time = 0.1

#####################################################################
##########################  Caching  ################################
#####################################################################
##Caching meta-algorithms: fixP, lce, no_cache lcd, btw, prob_cache
**.DS = "${cd=lce}"
##Caching algorithms: {lru,lfu,fifo,two,random}_cache
**.RS = "${cr=lru}_cache"
##Cache size (in chunks)
# scenario - EDGE caching
**.node[0].**.C = 0
**.node[1].**.C = 0
**.node[2].**.C = 0
**.node[3].**.C = 0
**.node[4].**.C = 0
**.node[5].**.C = 0
**.node[6].**.C = 0
**.node[7].**.C = 0
**.node[8].**.C = 0
**.node[9].**.C = 0
**.node[10].**.C = 0
**.node[11].**.C = 0
**.node[12].**.C = 0
**.node[13].**.C = 0
**.node[14].**.C = 0
**.node[15].**.C = 0
**.node[16].**.C = 0
**.node[17].**.C = 0
**.node[18].**.C = 0
**.node[19].**.C = 0
**.node[20].**.C = 0
**.node[21].**.C = 0
**.node[22].**.C = 0
**.node[23].**.C = 0
**.node[24].**.C = 0
**.node[25].**.C = 0
**.node[26].**.C = 0
**.node[27].**.C = 0
**.node[28].**.C = 0
**.node[29].**.C = 0
**.node[30].**.C = 0
**.node[31].**.C = 0 
**.node[32].**.C = 0
**.node[33].**.C = 0
**.node[34].**.C = 0
**.node[35].**.C = 0
**.node[36].**.C = 0
**.node[37].**.C = 0
**.node[38].**.C = 0
**.node[39].**.C = 0

**.node[40].**.C = 100
**.node[41].**.C = 100
**.node[42].**.C = 100
**.node[43].**.C = 100
**.node[44].**.C = 100
**.node[45].**.C = 100
**.node[46].**.C = 100
**.node[47].**.C = 100
**.node[48].**.C = 100
**.node[49].**.C = 100
**.node[50].**.C = 100
**.node[51].**.C = 100
**.node[52].**.C = 100
**.node[53].**.C = 100
**.node[54].**.C = 100
**.node[55].**.C = 100
**.node[56].**.C = 100
**.node[57].**.C = 100
**.node[58].**.C = 100
**.node[59].**.C = 100
**.node[60].**.C = 100
**.node[61].**.C = 100
**.node[62].**.C = 100
**.node[63].**.C = 100
**.node[64].**.C = 100
**.node[65].**.C = 100
**.node[66].**.C = 100
**.node[67].**.C = 100
**.node[68].**.C = 100
**.node[69].**.C = 100
**.node[70].**.C = 100
**.node[71].**.C = 100
**.node[72].**.C = 100
**.node[73].**.C = 100
**.node[74].**.C = 100
**.node[75].**.C = 100
**.node[76].**.C = 100
**.node[77].**.C = 100
**.node[78].**.C = 100
**.node[79].**.C = 100
**.node[80].**.C = 100
**.node[81].**.C = 100
**.node[82].**.C = 100
**.node[83].**.C = 100
**.node[84].**.C = 100
**.node[85].**.C = 100
**.node[86].**.C = 100
**.node[87].**.C = 100
**.node[88].**.C = 100
**.node[89].**.C = 100
**.node[90].**.C = 100
**.node[91].**.C = 100
**.node[92].**.C = 100
**.node[93].**.C = 100
**.node[94].**.C = 100
**.node[95].**.C = 100
**.node[96].**.C = 100
**.node[97].**.C = 100
**.node[98].**.C = 100
**.node[99].**.C = 100
**.node[100].**.C = 100
**.node[101].**.C = 100
**.node[102].**.C = 100
**.node[103].**.C = 100
**.node[104].**.C = 100
**.node[105].**.C = 100
**.node[106].**.C = 100
**.node[107].**.C = 100
**.node[108].**.C = 100
**.node[109].**.C = 100
**.node[110].**.C = 100
**.node[111].**.C = 100
**.node[112].**.C = 100
**.node[113].**.C = 100
**.node[114].**.C = 100
**.node[115].**.C = 100
**.node[116].**.C = 100
**.node[117].**.C = 100
**.node[118].**.C = 100
**.node[119].**.C = 100
**.node[120].**.C = 100

#####################################################################
###################  Content Distribution ###########################
#####################################################################
##Average size of  a content (in chunks)
## **.F =  ${fsize=1}
**.file_size =  ${fsize=1}
##Shaping factor of the Zipf distribution
**.alpha = ${a = 0.9}
##Cardinality of the catalogue; keep a 0.01% cache to catalogue ratio
**.objects = 100000

#####################################################################
##########################  Strategy ################################
#####################################################################
##Strategy layer (interest forwarding):
**.FS = "${sl= spr,nrr}"
**.TTL1 = ${ttl = 1000}
**.TTL2 = ${ttl}

#####################################################################
########################  Statistics ################################
#####################################################################
##Time window for the stability checking
**.window = 60
##Sampling hit_rate time 
**.ts = 0.1
##Ex: in this case every 60 secs the engine checks for the stabilization. Every 0.1 sec a sample is collected. Thus, the stabilization is checked every 60/0.1=600 samples.
##Number of nodes to be full ([0-1]) for starting statistic collections
**.partial_n = 0.5 
# Variance threshold for stabilisation confirmed
**.variance_threshold = ${variance=0.05}

##Time of simulation after the stabilization
**.steady = 600

## Required for running (misc)
**.fail_time = 0
**.fail_transient = 0
**.fail_duration = 0
